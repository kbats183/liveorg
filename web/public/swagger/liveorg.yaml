swagger: "2.0"
info:
  description: "LiveOrg api"
  version: "1.0.0"
  title: "LiveOrg"
schemes:
- http
produces:
  - application/json
basePath: /api.v1
paths:
  /token:
    get:
      tags:
        - Token
      summary: Get token
      responses:
        200:
          description: OK
          examples:
            result:
              token: string
  /races:
    get:
      tags:
        - Race
      summary: Get races
      parameters:
        - $ref: '#/parameters/offsetParam'
        - $ref: '#/parameters/limitParam'
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Race'
            type: array
  /{token}/race:
    post:
      tags:
        - Race
      summary: Create new race
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - in: body
          name: race
          required: true
          schema:
            $ref: '#/definitions/Race'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Race'
    put:
      tags:
        - Race
      summary: Update race
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - in: body
          name: race
          required: true
          schema:
            $ref: '#/definitions/Race'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Race'
  /race/{race_id}:
    get:
      tags:
        - Race
      summary: Get race
      parameters:
        - name: race_id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Race'
  /{token}/race/{race_id}:
    delete:
      tags:
        - Race
      summary: Delete race
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - name: race_id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: OK

  /groups:
    get:
      tags:
        - Group
      summary: Get groups
      parameters:
        - in: query
          name: race_id
          type: string
          format: uuid
          required: false
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
  /{token}/groups:
    post:
      tags:
        - Group
      summary: Create groups
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - in: body
          name: groups
          required: true
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      responses:
        201:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
    put:
      tags:
        - Group
      summary: Update groups
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - in: body
          name: groups
          required: true
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      responses:
        201:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
  /{token}/group:
    post:
      tags:
        - Group
      summary: Create group
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - in: body
          name: group
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Group'
    put:
      tags:
        - Group
      summary: Update group
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - in: body
          name: group
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Group'
  /group/{group_id}:
    get:
      tags:
        - Group
      summary: Get group
      parameters:
        - name: group_id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Group'
  /{token}/group/{group_id}:
    delete:
      tags:
        - Group
      summary: Delete group
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - name: group_id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: OK

  /persons:
    get:
      tags:
        - Person
      summary: Get persons
      parameters:
        - in: query
          name: race_id
          type: string
          format: uuid
          required: false
        - in: query
          name: group_id
          type: string
          format: uuid
          required: false
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Person'
            type: array
  /{token}/persons:
    post:
      tags:
        - Person
      summary: Create persons
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - in: body
          name: persons
          required: true
          schema:
            items:
              $ref: '#/definitions/Person'
            type: array
      responses:
        201:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Person'
            type: array
    put:
      tags:
        - Person
      summary: Update persons
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - in: body
          name: persons
          required: true
          schema:
            items:
              $ref: '#/definitions/Person'
            type: array
      responses:
        201:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Person'
            type: array
  /{token}/person:
    post:
      tags:
        - Person
      summary: Create person
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - in: body
          name: person
          required: true
          schema:
            $ref: '#/definitions/Person'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Person'
    put:
      tags:
        - Person
      summary: Update person
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - in: body
          name: person
          required: true
          schema:
            $ref: '#/definitions/Person'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/Person'
  /{token}/person/{person_id}:
    delete:
      tags:
        - Person
      summary: Delete person
      parameters:
        - name: token
          in: path
          type: string
          required: true
        - name: person_id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: OK

definitions:
  Race:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      description:
        type: string
      start_date:
        type: string
        format: date-time
      end_date:
        type: string
        format: date-time
      timezone:
        type: number
        default: 0
        minimum: -12
        maximum: +12
  Course:
    type: object
    properties:
      title:
        type: string
      code:
        type: string
  Group:
    type: object
    required:
      - id
      - race_id
      - name
    properties:
      id:
        type: string
        format: uuid
      race_id:
        type: string
        format: uuid
      name:
        type: string
      description:
        type: string
      course:
        items:
          $ref: '#/definitions/Course'
        type: array
  Split:
    type: object
    properties:
      title:
        type: string
      code:
        type: string
      time:
        type: number # msec
  Person:
    type: object
    required:
      - id
      - group_id
      - name
    properties:
      id:
        type: string
        format: uuid
      group_id:
        type: string
        format: uuid
      name:
        type: string
      description:
        type: string
      link:
        type: string
        format: url
      bib:
        type: string
      team:
        type: string
      start:
        type: string
        format: date-time
      finish:
        type: string
        format: date-time
      result:
        type: number # msec
      split:
        items:
          $ref: '#/definitions/Split'
        type: array
      status:
        type: string
        enum:
          - OK
          - DSQ


parameters:
  offsetParam:
    name: offset
    in: query
    type: integer
    format: int32
    default: 0
    required: true
  limitParam:
    name: limit
    in: query
    type: integer
    format: int32
    default: 20
    required: true